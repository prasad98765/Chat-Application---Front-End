{"ast":null,"code":"var _jsxFileName = \"/home/admin1/Desktop/Chat System/Fundoo App/Front End/new-BookStore-FrontEnd/src/component/chatPage/Store.jsx\";\nimport React from \"react\";\nimport Io from \"socket.io-client\";\nexport const CTX = React.createContext();\nconst initState = {\n  Friends1: [{\n    from: \"\",\n    msg: \"hello\"\n  }],\n  Friends2: [{\n    from: \"\",\n    msg: \"Hiii\"\n  }],\n  Friends3: [{\n    from: \"\",\n    msg: \"\"\n  }]\n};\n\nfunction reducer(state, action) {\n  const {\n    from,\n    msg\n  } = action.payload;\n\n  switch (action.type) {\n    case \"RECEIVE_MESSAGE\":\n      return { ...state,\n        [action.payload.topic]: [...state[action.payload.topic], {\n          from,\n          msg\n        }]\n      };\n\n    default:\n      return state;\n  }\n}\n\nlet socket;\n\nfunction sendChatAction(value) {\n  socket.emit(\"chat message\", value);\n}\n\nexport default function Store(props) {\n  const [allChats, dispatch] = React.useReducer(reducer, initState);\n\n  if (!socket) {\n    socket = Io(\":4000\");\n    socket.on(\"chat message\", function (msg) {\n      dispatch({\n        type: \"RECEIVE_MESSAGE\",\n        payload: msg\n      });\n    });\n  }\n\n  const user = \"\";\n  return React.createElement(CTX.Provider, {\n    value: {\n      allChats,\n      sendChatAction,\n      user\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, props.children);\n}","map":{"version":3,"sources":["/home/admin1/Desktop/Chat System/Fundoo App/Front End/new-BookStore-FrontEnd/src/component/chatPage/Store.jsx"],"names":["React","Io","CTX","createContext","initState","Friends1","from","msg","Friends2","Friends3","reducer","state","action","payload","type","topic","socket","sendChatAction","value","emit","Store","props","allChats","dispatch","useReducer","on","user","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAO,MAAMC,GAAG,GAAGF,KAAK,CAACG,aAAN,EAAZ;AACP,MAAMC,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE,CAAC;AAAEC,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,GAAG,EAAE;AAAjB,GAAD,CADM;AAEhBC,EAAAA,QAAQ,EAAE,CAAC;AAAEF,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,GAAG,EAAE;AAAjB,GAAD,CAFM;AAGhBE,EAAAA,QAAQ,EAAE,CAAC;AAAEH,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,GAAG,EAAE;AAAjB,GAAD;AAHM,CAAlB;;AAKA,SAASG,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,QAAM;AAAEN,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAgBK,MAAM,CAACC,OAA7B;;AACA,UAAQD,MAAM,CAACE,IAAf;AACE,SAAK,iBAAL;AACE,aAAO,EACL,GAAGH,KADE;AAEL,SAACC,MAAM,CAACC,OAAP,CAAeE,KAAhB,GAAwB,CACtB,GAAGJ,KAAK,CAACC,MAAM,CAACC,OAAP,CAAeE,KAAhB,CADc,EAEtB;AACET,UAAAA,IADF;AAEEC,UAAAA;AAFF,SAFsB;AAFnB,OAAP;;AAUF;AACE,aAAOI,KAAP;AAbJ;AAeD;;AAED,IAAIK,MAAJ;;AACA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7BF,EAAAA,MAAM,CAACG,IAAP,CAAY,cAAZ,EAA4BD,KAA5B;AACD;;AAED,eAAe,SAASE,KAAT,CAAeC,KAAf,EAAsB;AACnC,QAAM,CAACC,QAAD,EAAWC,QAAX,IAAuBvB,KAAK,CAACwB,UAAN,CAAiBd,OAAjB,EAA0BN,SAA1B,CAA7B;;AACA,MAAI,CAACY,MAAL,EAAa;AACXA,IAAAA,MAAM,GAAGf,EAAE,CAAC,OAAD,CAAX;AACAe,IAAAA,MAAM,CAACS,EAAP,CAAU,cAAV,EAA0B,UAAUlB,GAAV,EAAe;AACvCgB,MAAAA,QAAQ,CAAC;AAAET,QAAAA,IAAI,EAAE,iBAAR;AAA2BD,QAAAA,OAAO,EAAEN;AAApC,OAAD,CAAR;AACD,KAFD;AAGD;;AACD,QAAMmB,IAAI,GAAG,EAAb;AACA,SACE,oBAAC,GAAD,CAAK,QAAL;AAAc,IAAA,KAAK,EAAE;AAAEJ,MAAAA,QAAF;AAAYL,MAAAA,cAAZ;AAA4BS,MAAAA;AAA5B,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACM,QADT,CADF;AAKD","sourcesContent":["import React from \"react\";\nimport Io from \"socket.io-client\";\nexport const CTX = React.createContext();\nconst initState = {\n  Friends1: [{ from: \"\", msg: \"hello\" }],\n  Friends2: [{ from: \"\", msg: \"Hiii\" }],\n  Friends3: [{ from: \"\", msg: \"\" }],\n};\nfunction reducer(state, action) {\n  const { from, msg } = action.payload;\n  switch (action.type) {\n    case \"RECEIVE_MESSAGE\":\n      return {\n        ...state,\n        [action.payload.topic]: [\n          ...state[action.payload.topic],\n          {\n            from,\n            msg,\n          },\n        ],\n      };\n    default:\n      return state;\n  }\n}\n\nlet socket;\nfunction sendChatAction(value) {\n  socket.emit(\"chat message\", value);\n}\n\nexport default function Store(props) {\n  const [allChats, dispatch] = React.useReducer(reducer, initState);\n  if (!socket) {\n    socket = Io(\":4000\");\n    socket.on(\"chat message\", function (msg) {\n      dispatch({ type: \"RECEIVE_MESSAGE\", payload: msg });\n    });\n  }\n  const user = \"\";\n  return (\n    <CTX.Provider value={{ allChats, sendChatAction, user }}>\n      {props.children}\n    </CTX.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}