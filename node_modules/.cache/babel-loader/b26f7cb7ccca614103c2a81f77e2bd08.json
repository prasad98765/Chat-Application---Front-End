{"ast":null,"code":"var _jsxFileName = \"/home/admin1/Desktop/Chat System/Fundoo App/Front End/new-BookStore-FrontEnd/src/component/chatPage/Store.jsx\";\nimport React from \"react\";\nimport Io from 'socket.io-client';\nexport const CTX = React.createContext();\nconst initState = {\n  general: [{\n    from: 'aaron',\n    msg: 'hello'\n  }, {\n    from: 'aaron',\n    msg: 'hello'\n  }, {\n    from: 'aaron',\n    msg: 'hello'\n  }],\n  topic2: [{\n    from: 'aaron',\n    msg: 'hello'\n  }, {\n    from: 'abc',\n    msg: 'hello'\n  }, {\n    from: 'aaron',\n    msg: 'hello'\n  }]\n};\n\nfunction reducer(state, action) {\n  const {\n    from,\n    msg,\n    topic\n  } = action.payload;\n\n  switch (action.type) {\n    case \"RECEIVE_MESSAGE\":\n      return { ...state,\n        [action.payload.topic]: [...state[action.payload.topic], {\n          from,\n          msg\n        }]\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction sendChatAction(dispatch, socket) {\n  socket.emit('chat message');\n}\n\nlet socket;\nexport default function Store(props) {\n  if (!socket) {\n    socket = Io(':4000');\n  }\n\n  const [allChats, dispatch] = React.useReducer(reducer, initState);\n  return React.createElement(CTX.Provider, {\n    value: {\n      allChats\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, props.children);\n}","map":{"version":3,"sources":["/home/admin1/Desktop/Chat System/Fundoo App/Front End/new-BookStore-FrontEnd/src/component/chatPage/Store.jsx"],"names":["React","Io","CTX","createContext","initState","general","from","msg","topic2","reducer","state","action","topic","payload","type","sendChatAction","dispatch","socket","emit","Store","props","allChats","useReducer","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAGA,OAAO,MAAMC,GAAG,GAAGF,KAAK,CAACG,aAAN,EAAZ;AAGP,MAAMC,SAAS,GAAE;AACbC,EAAAA,OAAO,EAAE,CACL;AAACC,IAAAA,IAAI,EAAC,OAAN;AAAcC,IAAAA,GAAG,EAAC;AAAlB,GADK,EAEL;AAACD,IAAAA,IAAI,EAAC,OAAN;AAAcC,IAAAA,GAAG,EAAC;AAAlB,GAFK,EAGL;AAACD,IAAAA,IAAI,EAAC,OAAN;AAAcC,IAAAA,GAAG,EAAC;AAAlB,GAHK,CADI;AAMbC,EAAAA,MAAM,EAAE,CACJ;AAACF,IAAAA,IAAI,EAAC,OAAN;AAAcC,IAAAA,GAAG,EAAC;AAAlB,GADI,EAEJ;AAACD,IAAAA,IAAI,EAAC,KAAN;AAAYC,IAAAA,GAAG,EAAC;AAAhB,GAFI,EAGJ;AAACD,IAAAA,IAAI,EAAC,OAAN;AAAcC,IAAAA,GAAG,EAAC;AAAlB,GAHI;AANK,CAAjB;;AAeA,SAASE,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAA+B;AAC3B,QAAM;AAACL,IAAAA,IAAD;AAAMC,IAAAA,GAAN;AAAUK,IAAAA;AAAV,MAAmBD,MAAM,CAACE,OAAhC;;AACA,UAAOF,MAAM,CAACG,IAAd;AACG,SAAK,iBAAL;AACI,aAAM,EACL,GAAGJ,KADE;AAEL,SAACC,MAAM,CAACE,OAAP,CAAeD,KAAhB,GAAuB,CACnB,GAAGF,KAAK,CAACC,MAAM,CAACE,OAAP,CAAeD,KAAhB,CADW,EAEnB;AACIN,UAAAA,IADJ;AAEIC,UAAAA;AAFJ,SAFmB;AAFlB,OAAN;;AAUH;AACI,aAAOG,KAAP;AAbR;AAeH;;AAED,SAASK,cAAT,CAAwBC,QAAxB,EAAiCC,MAAjC,EAAwC;AACpCA,EAAAA,MAAM,CAACC,IAAP,CAAY,cAAZ;AACH;;AAED,IAAID,MAAJ;AAIA,eAAe,SAASE,KAAT,CAAeC,KAAf,EAAqB;AAChC,MAAG,CAACH,MAAJ,EAAW;AACPA,IAAAA,MAAM,GAAGhB,EAAE,CAAC,OAAD,CAAX;AACH;;AACD,QAAM,CAACoB,QAAD,EAAWL,QAAX,IAAuBhB,KAAK,CAACsB,UAAN,CAAiBb,OAAjB,EAA0BL,SAA1B,CAA7B;AAGA,SACI,oBAAC,GAAD,CAAK,QAAL;AAAc,IAAA,KAAK,EAAG;AAACiB,MAAAA;AAAD,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,CAACG,QADX,CADJ;AAKH","sourcesContent":["import React from \"react\";\nimport Io from 'socket.io-client'\n\n\nexport const CTX = React.createContext();\n\n\nconst initState ={\n    general :[\n        {from:'aaron',msg:'hello'},\n        {from:'aaron',msg:'hello'},\n        {from:'aaron',msg:'hello'},\n    ],\n    topic2 :[\n        {from:'aaron',msg:'hello'},\n        {from:'abc',msg:'hello'},\n        {from:'aaron',msg:'hello'},\n\n    ]\n\n}\n\nfunction reducer(state, action){\n    const {from,msg,topic} = action.payload;\n    switch(action.type){\n       case \"RECEIVE_MESSAGE\":\n           return{\n            ...state,\n            [action.payload.topic]:[\n                ...state[action.payload.topic],\n                {\n                    from,\n                    msg \n                }\n            ]\n           }\n        default:\n            return state\n    }\n}\n\nfunction sendChatAction(dispatch,socket){\n    socket.emit('chat message')\n}\n\nlet socket;\n\n\n\nexport default function Store(props){\n    if(!socket){\n        socket = Io(':4000')\n    }\n    const [allChats, dispatch] = React.useReducer(reducer, initState)\n    \n    \n    return(\n        <CTX.Provider value= {{allChats}}>\n            {props.children}\n        </CTX.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}