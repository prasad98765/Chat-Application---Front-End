{"ast":null,"code":"var _jsxFileName = \"/home/admin1/Desktop/Chat System/Fundoo App/Front End/new-BookStore-FrontEnd/src/component/chatPage/Dashboard.jsx\";\nimport React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Chip from \"@material-ui/core/Chip\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Button from \"@material-ui/core/Button\";\nimport TestField from \"@material-ui/core/TextField\";\nimport { CTX } from \"./Store\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: \"50px\",\n    textAlign: \"center\",\n    padding: theme.spacing(4, 2),\n    backgroundColor: \"lightgrey\"\n  },\n  flex: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  topicwindow: {\n    width: \"30%\",\n    height: \"300px\",\n    borderRight: \"3px solid grey\"\n  },\n  chatwindow: {\n    width: \"70%\",\n    height: \"300px\",\n    padding: \"20px\"\n  },\n  chatBox: {\n    width: \"85%\"\n  },\n  button: {\n    width: \"15%\"\n  }\n}));\nexport default function Dashboard() {\n  const classes = useStyles(); //CTX Store\n\n  const {\n    allChats,\n    sendChatAction,\n    user\n  } = React.useContext(CTX);\n  console.log({\n    allChats\n  });\n  const topics = Object.keys(allChats); // local State\n\n  const [actionTopic, changeActionTopic] = React.useState(topics[0]);\n  const [testValue, changeTextValue] = React.useState(\"\");\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h3\",\n    component: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"chat app\"), React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, actionTopic), React.createElement(\"div\", {\n    className: classes.flex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.topicwindow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, topics.map(topic => React.createElement(ListItem, {\n    onClick: e => changeActionTopic(e.target.innerText),\n    key: topic,\n    button: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: topic,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: classes.chatwindow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, allChats[actionTopic].map((chat, i) => // <ListItem key={topic} button>\n  //  <ListItemText primary={topic} />\n  //  </ListItem>\n  React.createElement(\"div\", {\n    className: classes.flex,\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Chip, {\n    label: chat.from,\n    className: classes.chip,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, chat.msg))))), React.createElement(\"div\", {\n    className: classes.flex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(TestField, {\n    label: \"Send a chat\",\n    className: classes.chatBox,\n    value: testValue,\n    onChange: e => changeTextValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    onClick: () => {\n      sendChatAction({\n        from: user,\n        msg: testValue,\n        topic: actionTopic\n      });\n      changeTextValue(\"\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Send\"))));\n}","map":{"version":3,"sources":["/home/admin1/Desktop/Chat System/Fundoo App/Front End/new-BookStore-FrontEnd/src/component/chatPage/Dashboard.jsx"],"names":["React","Paper","makeStyles","Typography","List","ListItem","Chip","ListItemText","Button","TestField","CTX","useStyles","theme","root","margin","textAlign","padding","spacing","backgroundColor","flex","display","alignItems","topicwindow","width","height","borderRight","chatwindow","chatBox","button","Dashboard","classes","allChats","sendChatAction","user","useContext","console","log","topics","Object","keys","actionTopic","changeActionTopic","useState","testValue","changeTextValue","map","topic","e","target","innerText","chat","i","from","chip","msg","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Chip from \"@material-ui/core/Chip\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Button from \"@material-ui/core/Button\";\nimport TestField from \"@material-ui/core/TextField\";\nimport { CTX } from \"./Store\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: \"50px\",\n    textAlign: \"center\",\n    padding: theme.spacing(4, 2),\n    backgroundColor: \"lightgrey\",\n  },\n  flex: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  topicwindow: {\n    width: \"30%\",\n    height: \"300px\",\n    borderRight: \"3px solid grey\",\n  },\n  chatwindow: {\n    width: \"70%\",\n    height: \"300px\",\n    padding: \"20px\",\n  },\n  chatBox: {\n    width: \"85%\",\n  },\n  button: {\n    width: \"15%\",\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n\n  //CTX Store\n  const { allChats, sendChatAction, user } = React.useContext(CTX);\n  console.log({ allChats });\n  const topics = Object.keys(allChats);\n\n  // local State\n  const [actionTopic, changeActionTopic] = React.useState(topics[0]);\n  const [testValue, changeTextValue] = React.useState(\"\");\n\n  return (\n    <div>\n      <Paper className={classes.root}>\n        <Typography variant=\"h3\" component=\"h3\">\n          chat app\n        </Typography>\n        <Typography variant=\"h5\" component=\"h5\">\n          {actionTopic}\n        </Typography>\n        <div className={classes.flex}>\n          <div className={classes.topicwindow}>\n            <List>\n              {topics.map((topic) => (\n                <ListItem\n                  onClick={(e) => changeActionTopic(e.target.innerText)}\n                  key={topic}\n                  button\n                >\n                  <ListItemText primary={topic} />\n                </ListItem>\n              ))}\n            </List>\n          </div>\n          <div className={classes.chatwindow}>\n            {allChats[actionTopic].map((chat, i) => (\n              // <ListItem key={topic} button>\n              //  <ListItemText primary={topic} />\n              //  </ListItem>\n              <div className={classes.flex} key={i}>\n                <Chip label={chat.from} className={classes.chip} />\n                <Typography variant=\"body1\" gutterBottom>\n                  {chat.msg}\n                </Typography>\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className={classes.flex}>\n          <TestField\n            label=\"Send a chat\"\n            className={classes.chatBox}\n            value={testValue}\n            onChange={(e) => changeTextValue(e.target.value)}\n          />\n\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            onClick={() => {\n              sendChatAction({\n                from: user,\n                msg: testValue,\n                topic: actionTopic,\n              });\n              changeTextValue(\"\");\n            }}\n          >\n            Send\n          </Button>\n        </div>\n      </Paper>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}