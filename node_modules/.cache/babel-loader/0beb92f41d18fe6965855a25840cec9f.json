{"ast":null,"code":"var _jsxFileName = \"/home/admin1/Desktop/Chat System/Fundoo App/Front End/new-BookStore-FrontEnd/src/component/chatPage/Dashboard.jsx\";\nimport React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Chip from '@material-ui/core/Chip';\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Button from '@material-ui/core/Button';\nimport TestField from '@material-ui/core/TextField';\nimport { CTX } from './Store';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: \"50px\",\n    textAlign: \"center\",\n    padding: theme.spacing(4, 2)\n  },\n  flex: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  topicwindow: {\n    width: \"30%\",\n    height: \"300px\",\n    borderRight: \"1px solid grey\"\n  },\n  chatwindow: {\n    width: \"70%\",\n    height: \"300px\",\n    padding: '20px'\n  },\n  chatBox: {\n    width: \"85%\"\n  },\n  button: {\n    width: \"15%\"\n  }\n}));\nexport default function Dashboard() {\n  const classes = useStyles(); //CTX Store\n\n  const [allChats] = React.useContext(CTX);\n  console.log({\n    allChats\n  });\n  const topics = Object.keys(allChats); // local State\n\n  const [actionTopic, changeActionTopic] = React.us;\n  const [testValue, changeTextValue] = React.useState('');\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h3\",\n    component: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"chat app\"), React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Topic Place Holder\"), React.createElement(\"div\", {\n    className: classes.flex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.topicwindow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, topics.map(topic => React.createElement(ListItem, {\n    key: topic,\n    button: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: topic,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: classes.chatwindow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, [{\n    from: 'user',\n    mes: 'hello'\n  }].map((chat, i) => // <ListItem key={topic} button>\n  //  <ListItemText primary={topic} />\n  //  </ListItem>\n  React.createElement(\"div\", {\n    className: classes.flex,\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Chip, {\n    label: chat.from,\n    className: classes.chip,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, chat.mes))))), React.createElement(\"div\", {\n    className: classes.flex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(TestField, {\n    label: \"Send a chat\",\n    className: classes.chatBox,\n    value: testValue,\n    onChange: e => changeTextValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Send\"))));\n}","map":{"version":3,"sources":["/home/admin1/Desktop/Chat System/Fundoo App/Front End/new-BookStore-FrontEnd/src/component/chatPage/Dashboard.jsx"],"names":["React","Paper","makeStyles","Typography","List","ListItem","ListItemIcon","Chip","ListItemText","Button","TestField","CTX","useStyles","theme","root","margin","textAlign","padding","spacing","flex","display","alignItems","topicwindow","width","height","borderRight","chatwindow","chatBox","button","Dashboard","classes","allChats","useContext","console","log","topics","Object","keys","actionTopic","changeActionTopic","us","testValue","changeTextValue","useState","map","topic","from","mes","chat","i","chip","e","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Chip from '@material-ui/core/Chip';\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Button from '@material-ui/core/Button';\nimport TestField from '@material-ui/core/TextField'\nimport {CTX} from './Store'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: \"50px\",\n    textAlign: \"center\",\n    padding: theme.spacing(4, 2),\n  },\n  flex: {\n    display: \"flex\",\n    alignItems : \"center\"\n  },\n  topicwindow: {\n    width: \"30%\",\n    height: \"300px\",\n    borderRight: \"1px solid grey\",\n  },\n  chatwindow: {\n    width: \"70%\",\n    height: \"300px\",\n    padding:'20px'\n  },\n  chatBox: {\n    width: \"85%\",\n  },\n  button: {\n    width: \"15%\",\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n\n    //CTX Store\n    const [allChats] = React.useContext(CTX);\n    console.log({allChats});\n    const topics = Object.keys(allChats)\n\n\n    // local State\n    const [actionTopic, changeActionTopic] = React.us\n    const [testValue,changeTextValue] = React.useState('');\n\n\n  return (\n    <div>\n      <Paper className={classes.root}>\n        <Typography variant=\"h3\" component=\"h3\">\n          chat app\n        </Typography>\n        <Typography variant=\"h5\" component=\"h5\">\n          Topic Place Holder\n        </Typography>\n        <div className={classes.flex}>\n          <div className={classes.topicwindow}>\n            <List>\n                {\n                    topics.map(topic =>(\n                        <ListItem key={topic} button>\n                         <ListItemText primary={topic} />\n                         </ListItem>\n                    ))\n                    \n                }\n             \n            </List>\n          </div>\n          <div className={classes.chatwindow}>\n          \n                {\n                    [{from:'user',mes: 'hello'}].map((chat,i) =>(\n                        // <ListItem key={topic} button>\n                        //  <ListItemText primary={topic} />\n                        //  </ListItem>\n                        <div className = {classes.flex} key={i} >\n                            <Chip label={chat.from} className={classes.chip}/>\n                    <Typography variant='body1' gutterBottom>{chat.mes}</Typography>\n                         </div>\n                    ))\n                    \n                }\n             \n          </div>\n        </div>\n        <div className={classes.flex}>\n        <TestField\n          label=\"Send a chat\"\n          className = {classes.chatBox}\n          value = {testValue}\n          onChange={(e) => changeTextValue(e.target.value)}\n        />\n\n        <Button variant=\"contained\" color=\"primary\">\n        Send\n      </Button>\n        </div>\n      </Paper>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}